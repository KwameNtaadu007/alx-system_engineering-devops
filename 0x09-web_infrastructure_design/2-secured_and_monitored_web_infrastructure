This design builds on the distrubuted design by hosting www.foobar.com securely. It serves encrypted traffic over HTTPS, and is monitored. 

 **Components and their Roles**

**Server 1**:
- Web Server (Nginx)
- Application Server
- Application Files (Code Base)
- Firewall 1

**Server 2**:
- Database: MySQL (Primary)
- Firewall 2

**Server 3**:
- Load Balancer: HAproxy (Terminating SSL)
- Database: MySQL (Replica)
- Firewall 3

//Diagram

**Firewalls**:
- Firewalls are added to enhance security by controlling incoming and outgoing network traffic. They help protect the servers from unauthorized access, prevent malicious traffic, and enforce security policies.

**SSL Certificate**:
- The SSL certificate is used to serve www.foobar.com over HTTPS. It encrypts data transmitted between the web server and users' browsers, ensuring the confidentiality and integrity of data in transit.

**Monitoring Clients (Data Collectors)**:
- Monitoring is crucial for tracking the health and performance of the infrastructure. Monitoring clients (data collectors) gather data from servers, databases, and other components, which is then sent to a monitoring service like Sumo Logic. This data helps in identifying issues, optimizing performance, and ensuring the system's reliability.

**Why Firewalls**:
- Firewalls are used to secure the infrastructure by controlling incoming and outgoing traffic. They filter and block potentially harmful traffic, protecting the servers from attacks and unauthorized access.

**Why HTTPS**:
- HTTPS is used to secure the transmission of data between the server and users. It encrypts data, preventing eavesdropping and tampering. This is essential for protecting sensitive information and user privacy.

**Purpose of Monitoring**:
- Monitoring is used to:
   - Identify performance bottlenecks.
   - Detect security threats or breaches.
   - Ensure high availability by detecting server or component failures.
   - Monitor application and server health.

**Data Collection for Monitoring**:
- The monitoring tool collects data through monitoring clients (data collectors) installed on each server. These clients collect metrics, logs, and other data and send it to the monitoring service for analysis.

**Monitoring Web Server QPS**:
- To monitor web server QPS (Queries Per Second), you would configure the monitoring tool to collect request and response data from the web server, count the number of requests per second, and provide alerts or reports based on this metric.

**Issues with the Infrastructure**:
1. **Terminating SSL at the Load Balancer Level**:
   - Terminating SSL at the load balancer may be considered an issue if the load balancer is compromised. While it's a common practice for performance reasons, it means that data is decrypted at the load balancer before being forwarded to the web server. If the load balancer is breached, sensitive data can be exposed.

2. **Single MySQL Server Capable of Accepting Writes**:
   - Having only one MySQL server that can accept writes is a single point of failure for the database. If this server goes down, write operations can't be performed, causing potential data loss or service disruptions.

3. **Servers with Identical Components**:
   - Having servers with all the same components (database, web server, and application server) can be problematic because it doesn't provide redundancy or load balancing at the application layer. A more resilient architecture would include multiple application servers behind the load balancer for better fault tolerance and scalability.
