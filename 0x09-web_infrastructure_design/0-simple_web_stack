0. Simple web stack

In this simple web infrastructure a user types in the URL www.foobar.com in their browser to access the website. 

**Components and their Roles**

https://drive.google.com/file/d/1e4FJDkPdWUV-jy6XBVDyGUjzYhD5toMV/view?usp=sharing

1. **Server**: The server (with IP 8.8.8.8 - unique address) is a physical or virtual machine that hosts all the components of the web infrastructure. It's responsible for managing and serving the website.

2. **Domain Name**: The domain name, in this case, "www.foobar.com," is a user-friendly way to access the website. It serves as a human-readable alias for the server's IP address (8.8.8.8). Domain names are resolved to IP addresses by the Domain Name System (DNS) which translates (in our case) foobar.com to 8.8.8.8.

3. **DNS Record**: The DNS record "www" in "www.foobar.com" is a subdomain that typically points to a web server's IP address. It's a type of DNS record known as a CNAME (Canonical Name) record, which is an alias to another domain (in this case, foobar.com).

4. **Web Server (Nginx)**: The web server (Nginx) is responsible for receiving and handling HTTP requests from users' browsers. It serves static content and forwards dynamic requests to the application server. It plays a role in load balancing and handles SSL termination if needed.

5. **Application Server**: The application server hosts the codebase of the website. It's responsible for processing dynamic content and generating HTML responses based on user requests. It communicates with the database to fetch or update data, and then it sends the response back to the web server.

6. **Application Files (Code Base)**: These are the files containing the website's code, including HTML, CSS, JavaScript, and any server-side code (e.g., PHP, Python, or Node.js) required to generate web pages dynamically.

7. **Database (MySQL)**: The database stores and manages the website's data. This can include user information, content, and any other data required by the website. The application server communicates with the database to retrieve or store data as needed.

8. **User's Computer**: The user's computer is the device that makes requests to access the website. It communicates with the server over the internet using HTTP(S) protocols.


When a user types in www.foobar.com in their browser, their computer sends an HTTP request to our server using the internet protocol (IP). The server receives this request and sends back an HTTP response containing the requested information.

Despite fulfilling the basic requirements, this one-server web infrastructure has some significant issues.

Firstly, since we are using a single server, it is a single point of failure (SPOF). If anything goes wrong with this server, our website will go down until we can fix it.

Secondly, when we need to perform maintenance tasks such as deploying new code or updating software, we need to take down our web server temporarily. This results in downtime for our website.

Finally, if we experience too much incoming traffic, our infrastructure will not be able to handle it since we cannot scale it up easily.



